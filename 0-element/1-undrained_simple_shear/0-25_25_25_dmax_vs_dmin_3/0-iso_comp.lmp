#********************************************************************************#
# @Author : Ming Yang
# @Email  : ykevin09@gmail.com
# @Date   : 2021-01-06
# @Last Modified by     : Ming Yang
# @Lost Modified Time   : 2021-05-15
# @Function  : Import sample data and isotropic compression via velocity control
#       1. Six (frictionless) mesh-plates to compress the sample until e=1.2
# @Reference : 
#********************************************************************************#
###Initialization
#preliminaries
units           si
atom_style      granular
atom_modify     map array
boundary        m m m
newton          off
communicate     single vel yes
#declare computation domain
read_data       input/data/Ottawa-F65.spl
#neighbor listing
neighbor        0.0001 bin
neigh_modify    delay 0 #every 100

###Setup
#material and interaction properties required
variable 	    Ep equal 7.0e10 #1GP=1e9Pa
variable 	    nu equal 0.25
variable 	    eps equal 0.8
variable        mu equal 0.1
variable        muPW equal 0.0
variable        muR equal 0.1
variable        muRPW equal 0.0
variable        etaR equal 0.13
variable 	    krF equal 2.25
hard_particles  yes
fix             m1 all property/global youngsModulus peratomtype ${Ep} ${Ep} 
fix             m2 all property/global poissonsRatio peratomtype ${nu} ${nu}
fix             m3 all property/global coefficientRestitution peratomtypepair 2 ${eps} ${eps} ${eps} ${eps}
fix             m4 all property/global coefficientFriction peratomtypepair 2 ${mu} ${muPW} ${muPW} ${muPW}
fix             m5 all property/global coefficientRollingFriction peratomtypepair 2 ${muR} ${muRPW} ${muRPW} ${muRPW}
fix             m6 all property/global coefficientRollingViscousDamping peratomtypepair 2 ${etaR} ${etaR} ${etaR} ${etaR}
fix             m7 all property/global rollingStiffness scalar ${krF}
#
#stress walls
variable        xl equal -0.0002
variable        yl equal -0.0002 
variable        zl equal -0.0002
variable        xh equal 0.0098 
variable        yh equal 0.0098
variable        zh equal 0.0098
variable        xa equal 0.5*(${xl}+${xh})
variable        ya equal 0.5*(${yl}+${yh})
variable        za equal 0.5*(${zl}+${zh})
fix             xwall1 all mesh/surface/stress file input/mesh/plane.stl type 2 scale 1.00 &
                    rotate axis 0 1 0 angle 90 move ${xl} ${ya} ${za} reference_point ${xl} ${ya} ${za}
fix             xwall2 all mesh/surface/stress file input/mesh/plane.stl type 2 scale 1.00 &
                    rotate axis 0 1 0 angle 90 move ${xh} ${ya} ${za} reference_point ${xh} ${ya} ${za}
fix             ywall1 all mesh/surface/stress file input/mesh/plane.stl type 2 scale 1.00 &
                    rotate axis 1 0 0 angle 90 move ${xa} ${yl} ${za} reference_point ${xa} ${yl} ${za}
fix             ywall2 all mesh/surface/stress file input/mesh/plane.stl type 2 scale 1.00 &
                    rotate axis 1 0 0 angle 90 move ${xa} ${yh} ${za} reference_point ${xa} ${yh} ${za}
fix             zwall1 all mesh/surface/stress file input/mesh/plane.stl type 2 scale 1.00 &
                    move ${xa} ${ya} ${zl} reference_point ${xa} ${ya} ${zl}
fix             zwall2 all mesh/surface/stress file input/mesh/plane.stl type 2 scale 1.00 &
                    move ${xa} ${ya} ${zh} reference_point ${xa} ${ya} ${zh}
fix             walls all wall/gran model hertz tangential no_history mesh n_meshes 6 &
                    meshes xwall1 ywall1 zwall1 xwall2 ywall2 zwall2
#
variable        xl equal f_xwall1[7]
variable        xh equal f_xwall2[7]
variable        yl equal f_ywall1[8]
variable        yh equal f_ywall2[8]
variable        zl equal f_zwall1[9]
variable        zh equal f_zwall2[9]
variable        Axy equal (v_xh-v_xl)*(v_yh-v_yl)
variable        Ayz equal (v_yh-v_yl)*(v_zh-v_zl)
variable        Axz equal (v_xh-v_xl)*(v_zh-v_zl)
#
#define the physics
pair_style      gran model hertz tangential history rolling_friction epsd3&
			        limitForce on torsionTorque on
pair_coeff      * *
#
group           atomAll type 1
#
###Detailed settings
#integrator
fix             integr all nve/sphere
#timestep
timestep        2.0e-9
fix             ctg all check/timestep/gran 1000 0.05 0.05
###Execution and further settings
variable        hstep equal 10000
#atom property and stress
compute         atomProp all property/atom mass diameter z vx vy vz
compute         atomDmin all reduce min c_atomProp[2]
variable        aDmin equal c_atomDmin
variable        atomV atom c_atomProp[4]^2+c_atomProp[5]^2+c_atomProp[6]^2
compute         atomVmax all reduce max v_atomV
variable        aVmax equal sqrt(c_atomVmax)
#
#homogenization based on the volume surrounded by the mesh plates
compute         atomStress all stress/atom virial
variable        bvol equal (v_xh-v_xl)*(v_yh-v_yl)*(v_zh-v_zl)
compute         bvolStress all reduce sum c_atomStress[1] c_atomStress[2] c_atomStress[3]&
                                          c_atomStress[4] c_atomStress[5] c_atomStress[6]
variable        pBvol equal -(c_bvolStress[1]+c_bvolStress[2]+c_bvolStress[3])/3/v_bvol
variable        sxxBvol equal -(c_bvolStress[1])/v_bvol
variable        syyBvol equal -(c_bvolStress[2])/v_bvol
variable        szzBvol equal -(c_bvolStress[3])/v_bvol
variable        sxyBvol equal (c_bvolStress[4])/v_bvol
variable        sxzBvol equal (c_bvolStress[5])/v_bvol
variable        syzBvol equal (c_bvolStress[6])/v_bvol
variable        volMass equal mass(atomAll)/2650.0
variable        eBvol equal (v_bvol-v_volMass)/v_volMass
#
#
compute         eng all ke
variable        oke equal c_eng
#
#particle-particle and particle-wall contact info
#compute         pp all pair/gran/local pos id force force_normal force_tangential delta
#compute         pw all wall/gran/local pos id force force_normal force_tangential delta
#void ratio (neglecting overlap)
#history
#dump            dpp all local ${hstep} output/0-comp/contact/ppcontact-*.dat &
#                    c_pp[1] c_pp[2] c_pp[3] &
#                    c_pp[4] c_pp[5] c_pp[6] c_pp[7] c_pp[8] c_pp[9] & 
#                    c_pp[10] c_pp[11] c_pp[12] &
#                    c_pp[13] c_pp[14] c_pp[15] &
#                    c_pp[16] c_pp[17] c_pp[18] &
#                    c_pp[19]
#dump            dpw all local ${hstep} output/0-comp/contact/pwcontact-*.dat & 
#                    c_pw[1] c_pw[2] c_pw[3] & 
#                    c_pw[4] c_pw[5] c_pw[6] c_pw[7] c_pw[8] c_pw[9] &
#                    c_pw[10] c_pw[11] c_pw[12] &
#                    c_pw[13] c_pw[14] c_pw[15] &
#                    c_pw[16] c_pw[17] c_pw[18] &
#                    c_pw[19]
#visualization
#dump            dmpMesh all mesh/vtk ${hstep} output/0-comp/visualization/wall-*.vtp stress wear
#dump            dmp all custom/vtk ${hstep} output/0-comp/visualization/particle-*.vtp id type type &
#                    x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius
#state
variable        ostep equal step
variable        sxx1 equal f_xwall1[1]/v_Ayz
variable        sxx2 equal f_xwall2[1]/v_Ayz
variable        syy1 equal f_ywall1[2]/v_Axz
variable        syy2 equal f_ywall2[2]/v_Axz
variable        szz1 equal f_zwall1[3]/v_Axy
variable        szz2 equal f_zwall2[3]/v_Axy
#
#variable for compression
variable        vel equal 0.1
variable        rstep equal v_hstep*10
variable        totalStep equal 2e8
#
shell           mkdir output
shell           mkdir output/0-comp
print           "N ke bvol eBvol&
 xl yl zl xh yh zh&
 sxxLeft sxxRight syyBack syyFront szzBot szzTop pBvol" &
    file output/0-comp/macro.txt screen no
#
fix             macroOutput all print ${hstep} &
                    "${ostep} ${oke} ${bvol} ${eBvol}& 
 ${xl} ${yl} ${zl} ${xh} ${yh} ${zh}&
 ${sxx1} ${sxx2} ${syy1} ${syy2} ${szz1} ${szz2} ${pBvol}" &
                    append output/0-comp/macro.txt screen no title none
#
#thermodynamic output settings
thermo_style    custom step v_oke v_eBvol v_pBvol v_aVmax v_sxx2 v_syy2 v_szz2
thermo          ${hstep}
thermo_modify   lost warn norm no
###run
#isotropic compression until voidRatio = 1.2
fix             Fmovex1 all move/mesh mesh xwall1 linear ${vel} 0. 0.
fix             Fmovey1 all move/mesh mesh ywall1 linear 0. ${vel} 0.
fix             Fmovez1 all move/mesh mesh zwall1 linear 0. 0. ${vel}
fix             Fmovex2 all move/mesh mesh xwall2 linear -${vel} 0. 0.
fix             Fmovey2 all move/mesh mesh ywall2 linear 0. -${vel} 0.
fix             Fmovez2 all move/mesh mesh zwall2 linear 0. 0. -${vel}
#
run             0
print             "${ostep} ${oke} ${bvol} ${eBvol}& 
 ${xl} ${yl} ${zl} ${xh} ${yh} ${zh}&
 ${sxx1} ${sxx2} ${syy1} ${syy2} ${szz1} ${szz2} ${pBvol}" &
    append output/0-comp/macro.txt screen no
#
run             ${totalStep} every ${rstep} &
    "if '${eBvol} < 1.2' then &
        'write_restart   restart/consol_0.equil' &
        'quit'"
